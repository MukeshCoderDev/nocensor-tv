/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../common";
import type { CreatorVault, CreatorVaultInterface } from "../CreatorVault";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_creator",
        type: "address",
      },
      {
        internalType: "address",
        name: "_libertyToken",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "CollateralAdded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "CollateralReleased",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Deposited",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Withdrawn",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "addCollateral",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "collateral",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "creator",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "deposit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "libertyToken",
    outputs: [
      {
        internalType: "contract LibertyToken",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "releaseCollateral",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "totalEarnings",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60a06040523480156200001157600080fd5b5060405162000fe938038062000fe9833981810160405281019062000037919062000126565b60016000819055508173ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff168152505080600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050506200016d565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620000ee82620000c1565b9050919050565b6200010081620000e1565b81146200010c57600080fd5b50565b6000815190506200012081620000f5565b92915050565b6000806040838503121562000140576200013f620000bc565b5b600062000150858286016200010f565b925050602062000163858286016200010f565b9150509250929050565b608051610e36620001b360003960008181610177015281816101a9015281816103600152818161042d015281816105570152818161073801526108040152610e366000f3fe608060405234801561001057600080fd5b50600436106100885760003560e01c80639fb09e231161005b5780639fb09e2314610101578063b6b55f251461011f578063bcc46e831461013b578063d8dfeb451461015757610088565b806302d05d3f1461008d5780632df3eba4146100ab5780632e1a7d4d146100c957806339007b77146100e5575b600080fd5b610095610175565b6040516100a2919061097a565b60405180910390f35b6100b3610199565b6040516100c091906109ae565b60405180910390f35b6100e360048036038101906100de91906109fa565b61019f565b005b6100ff60048036038101906100fa91906109fa565b610423565b005b61010961061a565b6040516101169190610a86565b60405180910390f35b610139600480360381019061013491906109fa565b610640565b005b610155600480360381019061015091906109fa565b610736565b005b61015f6108da565b60405161016c91906109ae565b60405180910390f35b7f000000000000000000000000000000000000000000000000000000000000000081565b60025481565b6101a76108e0565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610235576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161022c90610afe565b60405180910390fd5b80600354600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401610294919061097a565b602060405180830381865afa1580156102b1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102d59190610b33565b6102df9190610b8f565b1015610320576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161031790610c0f565b60405180910390fd5b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb7f0000000000000000000000000000000000000000000000000000000000000000836040518363ffffffff1660e01b815260040161039d929190610c2f565b6020604051808303816000875af11580156103bc573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103e09190610c90565b507f430648de173157e069201c943adb2d4e340e7cf5b27b1b09c9cb852f03d63b568160405161041091906109ae565b60405180910390a161042061092f565b50565b61042b6108e0565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146104b9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104b090610afe565b60405180910390fd5b8060035410156104fe576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104f590610d09565b60405180910390fd5b80600360008282546105109190610b8f565b92505081905550600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb7f0000000000000000000000000000000000000000000000000000000000000000836040518363ffffffff1660e01b8152600401610594929190610c2f565b6020604051808303816000875af11580156105b3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105d79190610c90565b507faead4ad0c0f042db89bb4a86493251419b04aac6fc65ac9b3f7370ac270578198160405161060791906109ae565b60405180910390a161061761092f565b50565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3330846040518463ffffffff1660e01b815260040161069f93929190610d29565b6020604051808303816000875af11580156106be573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106e29190610c90565b5080600260008282546106f59190610d60565b925050819055507f2a89b2e3d580398d6dc2db5e0f336b52602bbaa51afa9bb5cdf59239cf0d2bea8160405161072b91906109ae565b60405180910390a150565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146107c4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107bb90610afe565b60405180910390fd5b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd7f000000000000000000000000000000000000000000000000000000000000000030846040518463ffffffff1660e01b815260040161084393929190610d29565b6020604051808303816000875af1158015610862573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108869190610c90565b5080600360008282546108999190610d60565b925050819055507f206d5f22994381488f76c20f193ebf898daf960461a61d40e68e1641f62d8c5d816040516108cf91906109ae565b60405180910390a150565b60035481565b600260005403610925576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161091c90610de0565b60405180910390fd5b6002600081905550565b6001600081905550565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061096482610939565b9050919050565b61097481610959565b82525050565b600060208201905061098f600083018461096b565b92915050565b6000819050919050565b6109a881610995565b82525050565b60006020820190506109c3600083018461099f565b92915050565b600080fd5b6109d781610995565b81146109e257600080fd5b50565b6000813590506109f4816109ce565b92915050565b600060208284031215610a1057610a0f6109c9565b5b6000610a1e848285016109e5565b91505092915050565b6000819050919050565b6000610a4c610a47610a4284610939565b610a27565b610939565b9050919050565b6000610a5e82610a31565b9050919050565b6000610a7082610a53565b9050919050565b610a8081610a65565b82525050565b6000602082019050610a9b6000830184610a77565b92915050565b600082825260208201905092915050565b7f4f6e6c792063726561746f720000000000000000000000000000000000000000600082015250565b6000610ae8600c83610aa1565b9150610af382610ab2565b602082019050919050565b60006020820190508181036000830152610b1781610adb565b9050919050565b600081519050610b2d816109ce565b92915050565b600060208284031215610b4957610b486109c9565b5b6000610b5784828501610b1e565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610b9a82610995565b9150610ba583610995565b9250828203905081811115610bbd57610bbc610b60565b5b92915050565b7f496e73756666696369656e742062616c616e6365000000000000000000000000600082015250565b6000610bf9601483610aa1565b9150610c0482610bc3565b602082019050919050565b60006020820190508181036000830152610c2881610bec565b9050919050565b6000604082019050610c44600083018561096b565b610c51602083018461099f565b9392505050565b60008115159050919050565b610c6d81610c58565b8114610c7857600080fd5b50565b600081519050610c8a81610c64565b92915050565b600060208284031215610ca657610ca56109c9565b5b6000610cb484828501610c7b565b91505092915050565b7f496e73756666696369656e7420636f6c6c61746572616c000000000000000000600082015250565b6000610cf3601783610aa1565b9150610cfe82610cbd565b602082019050919050565b60006020820190508181036000830152610d2281610ce6565b9050919050565b6000606082019050610d3e600083018661096b565b610d4b602083018561096b565b610d58604083018461099f565b949350505050565b6000610d6b82610995565b9150610d7683610995565b9250828201905080821115610d8e57610d8d610b60565b5b92915050565b7f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00600082015250565b6000610dca601f83610aa1565b9150610dd582610d94565b602082019050919050565b60006020820190508181036000830152610df981610dbd565b905091905056fea26469706673582212205b8eb19bac60d17e9bc86645237d1aaf1e9485a6da566b7168753b21f7c773ff64736f6c63430008140033";

type CreatorVaultConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: CreatorVaultConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class CreatorVault__factory extends ContractFactory {
  constructor(...args: CreatorVaultConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    _creator: AddressLike,
    _libertyToken: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(_creator, _libertyToken, overrides || {});
  }
  override deploy(
    _creator: AddressLike,
    _libertyToken: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(_creator, _libertyToken, overrides || {}) as Promise<
      CreatorVault & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): CreatorVault__factory {
    return super.connect(runner) as CreatorVault__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): CreatorVaultInterface {
    return new Interface(_abi) as CreatorVaultInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): CreatorVault {
    return new Contract(address, _abi, runner) as unknown as CreatorVault;
  }
}
