/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../common";
import type {
  SubscriptionModule,
  SubscriptionModuleInterface,
} from "../SubscriptionModule";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "contentId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "canAccess",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "contentCreators",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "contentId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "execute",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "contentId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "creator",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "initData",
        type: "bytes",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "subscriptionPrices",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "subscriptions",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50610877806100206000396000f3fe6080604052600436106100555760003560e01c806359efcb151461005a57806398fb3a5614610076578063c3379166146100b3578063cabec0e0146100f0578063d5b2d1ed1461012d578063e209b6461461016a575b600080fd5b610074600480360381019061006f9190610538565b610193565b005b34801561008257600080fd5b5061009d60048036038101906100989190610598565b610343565b6040516100aa9190610606565b60405180910390f35b3480156100bf57600080fd5b506100da60048036038101906100d5919061064d565b610376565b6040516100e7919061069c565b60405180910390f35b3480156100fc57600080fd5b5061011760048036038101906101129190610598565b61039b565b604051610124919061069c565b60405180910390f35b34801561013957600080fd5b50610154600480360381019061014f919061064d565b6103b3565b60405161016191906106d2565b60405180910390f35b34801561017657600080fd5b50610191600480360381019061018c91906106ed565b610410565b005b60016000848152602001908152602001600020543410156101e9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101e0906107be565b60405180910390fd5b600062278d00905060006002600086815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905060008242610254919061080d565b90504282111561026d57828261026a919061080d565b90505b806002600088815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555060008087815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc349081150290604051600060405180830381858888f1935050505015801561033a573d6000803e3d6000fd5b50505050505050565b60006020528060005260406000206000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6002602052816000526040600020602052806000526040600020600091509150505481565b60016020528060005260406000206000915090505481565b6000426002600085815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205411905092915050565b600082828101906104219190610598565b90508360008087815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508060016000878152602001908152602001600020819055505050505050565b600080fd5b600080fd5b6000819050919050565b6104b08161049d565b81146104bb57600080fd5b50565b6000813590506104cd816104a7565b92915050565b600080fd5b600080fd5b600080fd5b60008083601f8401126104f8576104f76104d3565b5b8235905067ffffffffffffffff811115610515576105146104d8565b5b602083019150836001820283011115610531576105306104dd565b5b9250929050565b60008060006040848603121561055157610550610493565b5b600061055f868287016104be565b935050602084013567ffffffffffffffff8111156105805761057f610498565b5b61058c868287016104e2565b92509250509250925092565b6000602082840312156105ae576105ad610493565b5b60006105bc848285016104be565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006105f0826105c5565b9050919050565b610600816105e5565b82525050565b600060208201905061061b60008301846105f7565b92915050565b61062a816105e5565b811461063557600080fd5b50565b60008135905061064781610621565b92915050565b6000806040838503121561066457610663610493565b5b6000610672858286016104be565b925050602061068385828601610638565b9150509250929050565b6106968161049d565b82525050565b60006020820190506106b1600083018461068d565b92915050565b60008115159050919050565b6106cc816106b7565b82525050565b60006020820190506106e760008301846106c3565b92915050565b6000806000806060858703121561070757610706610493565b5b6000610715878288016104be565b945050602061072687828801610638565b935050604085013567ffffffffffffffff81111561074757610746610498565b5b610753878288016104e2565b925092505092959194509250565b600082825260208201905092915050565b7f496e73756666696369656e74207061796d656e74000000000000000000000000600082015250565b60006107a8601483610761565b91506107b382610772565b602082019050919050565b600060208201905081810360008301526107d78161079b565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006108188261049d565b91506108238361049d565b925082820190508082111561083b5761083a6107de565b5b9291505056fea26469706673582212200c85cf2ee22f29900ef8db047de393d6a9208396b36aadaa8a98ddba8e080dbf64736f6c63430008140033";

type SubscriptionModuleConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: SubscriptionModuleConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class SubscriptionModule__factory extends ContractFactory {
  constructor(...args: SubscriptionModuleConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      SubscriptionModule & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): SubscriptionModule__factory {
    return super.connect(runner) as SubscriptionModule__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): SubscriptionModuleInterface {
    return new Interface(_abi) as SubscriptionModuleInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): SubscriptionModule {
    return new Contract(address, _abi, runner) as unknown as SubscriptionModule;
  }
}
