/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../common";
import type { WatchParty, WatchPartyInterface } from "../WatchParty";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_moduleManager",
        type: "address",
      },
      {
        internalType: "address",
        name: "_ageVerifier",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "partyId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "host",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "contentId",
        type: "uint256",
      },
    ],
    name: "PartyCreated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "partyId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "participant",
        type: "address",
      },
    ],
    name: "PartyJoined",
    type: "event",
  },
  {
    inputs: [],
    name: "ageVerifier",
    outputs: [
      {
        internalType: "contract AgeVerification",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "contentId",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "isPrivate",
        type: "bool",
      },
      {
        internalType: "uint256",
        name: "entryFee",
        type: "uint256",
      },
    ],
    name: "createParty",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "partyId",
        type: "uint256",
      },
    ],
    name: "joinParty",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "moduleManager",
    outputs: [
      {
        internalType: "contract ModuleManager",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "parties",
    outputs: [
      {
        internalType: "address",
        name: "host",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "contentId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "startTime",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "isPrivate",
        type: "bool",
      },
      {
        internalType: "uint256",
        name: "entryFee",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "partyCounter",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040523480156200001157600080fd5b50604051620010363803806200103683398181016040528101906200003791906200012c565b80806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505081600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550505062000173565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620000f482620000c7565b9050919050565b6200010681620000e7565b81146200011257600080fd5b50565b6000815190506200012681620000fb565b92915050565b60008060408385031215620001465762000145620000c2565b5b6000620001568582860162000115565b9250506020620001698582860162000115565b9150509250929050565b610eb380620001836000396000f3fe6080604052600436106100555760003560e01c80630500894d1461005a5780630d12479f1461008557806370651a18146100b057806372b39532146100f157806390fc38451461011c578063dbc658b414610159575b600080fd5b34801561006657600080fd5b5061006f610175565b60405161007c91906108fc565b60405180910390f35b34801561009157600080fd5b5061009a61017b565b6040516100a79190610996565b60405180910390f35b3480156100bc57600080fd5b506100d760048036038101906100d291906109e2565b61019f565b6040516100e8959493929190610a4b565b60405180910390f35b3480156100fd57600080fd5b50610106610202565b6040516101139190610abf565b60405180910390f35b34801561012857600080fd5b50610143600480360381019061013e9190610b06565b610228565b60405161015091906108fc565b60405180910390f35b610173600480360381019061016e91906109e2565b6104ad565b005b60025481565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60036020528060005260406000206000915090508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060010154908060030154908060040160009054906101000a900460ff16908060050154905085565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166318a9d222336040518263ffffffff1660e01b81526004016102849190610b59565b602060405180830381865afa1580156102a1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102c59190610b89565b610304576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102fb90610c13565b60405180910390fd5b6002600081548092919061031790610c62565b91905055506040518060c001604052803373ffffffffffffffffffffffffffffffffffffffff168152602001858152602001600067ffffffffffffffff81111561036457610363610caa565b5b6040519080825280602002602001820160405280156103925781602001602082028036833780820191505090505b50815260200142815260200184151581526020018381525060036000600254815260200190815260200160002060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060208201518160010155604082015181600201908051906020019061042c92919061083c565b506060820151816003015560808201518160040160006101000a81548160ff02191690831515021790555060a082015181600501559050507fb25d3303e9adf1035aee35d2b80f1198a3347850ab326db32dadba695a68b173600254338660405161049993929190610cd9565b60405180910390a160025490509392505050565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166318a9d222336040518263ffffffff1660e01b81526004016105069190610b59565b602060405180830381865afa158015610523573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105479190610b89565b610586576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161057d90610c13565b60405180910390fd5b6000600360008381526020019081526020016000209050600073ffffffffffffffffffffffffffffffffffffffff168160000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1603610630576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161062790610d5c565b60405180910390fd5b8060040160009054906101000a900460ff16156106da578060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146106d9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106d090610dc8565b60405180910390fd5b5b60008160050154111561079a57806005015434101561072e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161072590610e34565b60405180910390fd5b8060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc349081150290604051600060405180830381858888f19350505050158015610798573d6000803e3d6000fd5b505b80600201339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507f7f11de25667cb0390836911cd3328d9aa89f5078503d988d3504ed38070b1d458233604051610830929190610e54565b60405180910390a15050565b8280548282559060005260206000209081019282156108b5579160200282015b828111156108b45782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055509160200191906001019061085c565b5b5090506108c291906108c6565b5090565b5b808211156108df5760008160009055506001016108c7565b5090565b6000819050919050565b6108f6816108e3565b82525050565b600060208201905061091160008301846108ed565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600061095c61095761095284610917565b610937565b610917565b9050919050565b600061096e82610941565b9050919050565b600061098082610963565b9050919050565b61099081610975565b82525050565b60006020820190506109ab6000830184610987565b92915050565b600080fd5b6109bf816108e3565b81146109ca57600080fd5b50565b6000813590506109dc816109b6565b92915050565b6000602082840312156109f8576109f76109b1565b5b6000610a06848285016109cd565b91505092915050565b6000610a1a82610917565b9050919050565b610a2a81610a0f565b82525050565b60008115159050919050565b610a4581610a30565b82525050565b600060a082019050610a606000830188610a21565b610a6d60208301876108ed565b610a7a60408301866108ed565b610a876060830185610a3c565b610a9460808301846108ed565b9695505050505050565b6000610aa982610963565b9050919050565b610ab981610a9e565b82525050565b6000602082019050610ad46000830184610ab0565b92915050565b610ae381610a30565b8114610aee57600080fd5b50565b600081359050610b0081610ada565b92915050565b600080600060608486031215610b1f57610b1e6109b1565b5b6000610b2d868287016109cd565b9350506020610b3e86828701610af1565b9250506040610b4f868287016109cd565b9150509250925092565b6000602082019050610b6e6000830184610a21565b92915050565b600081519050610b8381610ada565b92915050565b600060208284031215610b9f57610b9e6109b1565b5b6000610bad84828501610b74565b91505092915050565b600082825260208201905092915050565b7f41676520766572696669636174696f6e20726571756972656400000000000000600082015250565b6000610bfd601983610bb6565b9150610c0882610bc7565b602082019050919050565b60006020820190508181036000830152610c2c81610bf0565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610c6d826108e3565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203610c9f57610c9e610c33565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000606082019050610cee60008301866108ed565b610cfb6020830185610a21565b610d0860408301846108ed565b949350505050565b7f506172747920646f65736e277420657869737400000000000000000000000000600082015250565b6000610d46601383610bb6565b9150610d5182610d10565b602082019050919050565b60006020820190508181036000830152610d7581610d39565b9050919050565b7f5072697661746520706172747900000000000000000000000000000000000000600082015250565b6000610db2600d83610bb6565b9150610dbd82610d7c565b602082019050919050565b60006020820190508181036000830152610de181610da5565b9050919050565b7f496e73756666696369656e742066656500000000000000000000000000000000600082015250565b6000610e1e601083610bb6565b9150610e2982610de8565b602082019050919050565b60006020820190508181036000830152610e4d81610e11565b9050919050565b6000604082019050610e6960008301856108ed565b610e766020830184610a21565b939250505056fea2646970667358221220f3b22af6d09133c7272b31ce766490641d50de9901bbbd6c3d0a15c7a9a68dee64736f6c63430008140033";

type WatchPartyConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: WatchPartyConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class WatchParty__factory extends ContractFactory {
  constructor(...args: WatchPartyConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    _moduleManager: AddressLike,
    _ageVerifier: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(
      _moduleManager,
      _ageVerifier,
      overrides || {}
    );
  }
  override deploy(
    _moduleManager: AddressLike,
    _ageVerifier: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(
      _moduleManager,
      _ageVerifier,
      overrides || {}
    ) as Promise<
      WatchParty & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): WatchParty__factory {
    return super.connect(runner) as WatchParty__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): WatchPartyInterface {
    return new Interface(_abi) as WatchPartyInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): WatchParty {
    return new Contract(address, _abi, runner) as unknown as WatchParty;
  }
}
