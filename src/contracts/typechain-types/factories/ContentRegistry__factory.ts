/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../common";
import type {
  ContentRegistry,
  ContentRegistryInterface,
} from "../ContentRegistry";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_creatorRegistry",
        type: "address",
      },
      {
        internalType: "address",
        name: "_ageVerifier",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "contentId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "creatorId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "string",
        name: "dataCID",
        type: "string",
      },
    ],
    name: "ContentCreated",
    type: "event",
  },
  {
    inputs: [],
    name: "ageVerifier",
    outputs: [
      {
        internalType: "contract AgeVerification",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "contentCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "contents",
    outputs: [
      {
        internalType: "uint256",
        name: "creatorId",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "dataCID",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "creationTime",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "dataCID",
        type: "string",
      },
    ],
    name: "createContent",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "creatorRegistry",
    outputs: [
      {
        internalType: "contract CreatorRegistry",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b5060405162000f0438038062000f0483398181016040528101906100349190610121565b80806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505081600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050610161565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006100ee826100c3565b9050919050565b6100fe816100e3565b811461010957600080fd5b50565b60008151905061011b816100f5565b92915050565b60008060408385031215610138576101376100be565b5b60006101468582860161010c565b92505060206101578582860161010c565b9150509250929050565b610d9380620001716000396000f3fe608060405234801561001057600080fd5b50600436106100575760003560e01c80630d12479f1461005c578063497cc8411461007a5780639a6a5cf0146100aa578063b5ecf912146100c8578063cc459696146100fa575b600080fd5b610064610118565b604051610071919061055a565b60405180910390f35b610094600480360381019061008f91906105e4565b61013c565b6040516100a1919061064a565b60405180910390f35b6100b26103fd565b6040516100bf9190610686565b60405180910390f35b6100e260048036038101906100dd91906106cd565b610423565b6040516100f19392919061078a565b60405180910390f35b6101026104d5565b60405161010f919061064a565b60405180910390f35b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166318a9d222336040518263ffffffff1660e01b815260040161019891906107e9565b602060405180830381865afa1580156101b5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101d9919061083c565b610218576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161020f906108b5565b60405180910390fd5b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663b2d6d475336040518263ffffffff1660e01b815260040161027591906107e9565b602060405180830381865afa158015610292573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102b691906108ea565b9050600081036102fb576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102f290610963565b60405180910390fd5b6002600081548092919061030e906109b2565b9190505550604051806060016040528082815260200185858080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050508152602001428152506003600060025481526020019081526020016000206000820151816000015560208201518160010190816103a69190610c2b565b5060408201518160020155905050806002547f2f8efc703c57c5234fe788c6adc3696c98d7e91d0217be27d45114ff4dee8ed786866040516103e9929190610d39565b60405180910390a360025491505092915050565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600360205280600052604060002060009150905080600001549080600101805461044c90610a58565b80601f016020809104026020016040519081016040528092919081815260200182805461047890610a58565b80156104c55780601f1061049a576101008083540402835291602001916104c5565b820191906000526020600020905b8154815290600101906020018083116104a857829003601f168201915b5050505050908060020154905083565b60025481565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600061052061051b610516846104db565b6104fb565b6104db565b9050919050565b600061053282610505565b9050919050565b600061054482610527565b9050919050565b61055481610539565b82525050565b600060208201905061056f600083018461054b565b92915050565b600080fd5b600080fd5b600080fd5b600080fd5b600080fd5b60008083601f8401126105a4576105a361057f565b5b8235905067ffffffffffffffff8111156105c1576105c0610584565b5b6020830191508360018202830111156105dd576105dc610589565b5b9250929050565b600080602083850312156105fb576105fa610575565b5b600083013567ffffffffffffffff8111156106195761061861057a565b5b6106258582860161058e565b92509250509250929050565b6000819050919050565b61064481610631565b82525050565b600060208201905061065f600083018461063b565b92915050565b600061067082610527565b9050919050565b61068081610665565b82525050565b600060208201905061069b6000830184610677565b92915050565b6106aa81610631565b81146106b557600080fd5b50565b6000813590506106c7816106a1565b92915050565b6000602082840312156106e3576106e2610575565b5b60006106f1848285016106b8565b91505092915050565b600081519050919050565b600082825260208201905092915050565b60005b83811015610734578082015181840152602081019050610719565b60008484015250505050565b6000601f19601f8301169050919050565b600061075c826106fa565b6107668185610705565b9350610776818560208601610716565b61077f81610740565b840191505092915050565b600060608201905061079f600083018661063b565b81810360208301526107b18185610751565b90506107c0604083018461063b565b949350505050565b60006107d3826104db565b9050919050565b6107e3816107c8565b82525050565b60006020820190506107fe60008301846107da565b92915050565b60008115159050919050565b61081981610804565b811461082457600080fd5b50565b60008151905061083681610810565b92915050565b60006020828403121561085257610851610575565b5b600061086084828501610827565b91505092915050565b7f41676520766572696669636174696f6e20726571756972656400000000000000600082015250565b600061089f601983610705565b91506108aa82610869565b602082019050919050565b600060208201905081810360008301526108ce81610892565b9050919050565b6000815190506108e4816106a1565b92915050565b600060208284031215610900576108ff610575565b5b600061090e848285016108d5565b91505092915050565b7f4e6f74206120726567697374657265642063726561746f720000000000000000600082015250565b600061094d601883610705565b915061095882610917565b602082019050919050565b6000602082019050818103600083015261097c81610940565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006109bd82610631565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82036109ef576109ee610983565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680610a7057607f821691505b602082108103610a8357610a82610a29565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b600060088302610aeb7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82610aae565b610af58683610aae565b95508019841693508086168417925050509392505050565b6000610b28610b23610b1e84610631565b6104fb565b610631565b9050919050565b6000819050919050565b610b4283610b0d565b610b56610b4e82610b2f565b848454610abb565b825550505050565b600090565b610b6b610b5e565b610b76818484610b39565b505050565b5b81811015610b9a57610b8f600082610b63565b600181019050610b7c565b5050565b601f821115610bdf57610bb081610a89565b610bb984610a9e565b81016020851015610bc8578190505b610bdc610bd485610a9e565b830182610b7b565b50505b505050565b600082821c905092915050565b6000610c0260001984600802610be4565b1980831691505092915050565b6000610c1b8383610bf1565b9150826002028217905092915050565b610c34826106fa565b67ffffffffffffffff811115610c4d57610c4c6109fa565b5b610c578254610a58565b610c62828285610b9e565b600060209050601f831160018114610c955760008415610c83578287015190505b610c8d8582610c0f565b865550610cf5565b601f198416610ca386610a89565b60005b82811015610ccb57848901518255600182019150602085019450602081019050610ca6565b86831015610ce85784890151610ce4601f891682610bf1565b8355505b6001600288020188555050505b505050505050565b82818337600083830152505050565b6000610d188385610705565b9350610d25838584610cfd565b610d2e83610740565b840190509392505050565b60006020820190508181036000830152610d54818486610d0c565b9050939250505056fea26469706673582212204b27943b84271dc477e9ea724d10a83ff7f9ef2a5c4cc65fae158ce885bf570264736f6c63430008140033";

type ContentRegistryConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ContentRegistryConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ContentRegistry__factory extends ContractFactory {
  constructor(...args: ContentRegistryConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    _creatorRegistry: AddressLike,
    _ageVerifier: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(
      _creatorRegistry,
      _ageVerifier,
      overrides || {}
    );
  }
  override deploy(
    _creatorRegistry: AddressLike,
    _ageVerifier: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(
      _creatorRegistry,
      _ageVerifier,
      overrides || {}
    ) as Promise<
      ContentRegistry & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): ContentRegistry__factory {
    return super.connect(runner) as ContentRegistry__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ContentRegistryInterface {
    return new Interface(_abi) as ContentRegistryInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): ContentRegistry {
    return new Contract(address, _abi, runner) as unknown as ContentRegistry;
  }
}
