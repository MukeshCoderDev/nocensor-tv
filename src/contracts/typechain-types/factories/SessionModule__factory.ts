/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../common";
import type { SessionModule, SessionModuleInterface } from "../SessionModule";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "activeSessions",
    outputs: [
      {
        internalType: "uint256",
        name: "startTime",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "accumulatedCost",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "contentId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "canAccess",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "configs",
    outputs: [
      {
        internalType: "uint256",
        name: "pricePerSecond",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "paymentToken",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "contentId",
        type: "uint256",
      },
    ],
    name: "endSession",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "execute",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "contentId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "initData",
        type: "bytes",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "contentId",
        type: "uint256",
      },
    ],
    name: "startSession",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b5061055f806100206000396000f3fe60806040526004361061006f5760003560e01c8063771276121161004e5780637712761214610108578063913813ad14610158578063d5b2d1ed146101a9578063e209b646146101d957600080fd5b806298fa221461007457806326cc5583146100d357806359efcb15146100f5575b600080fd5b34801561008057600080fd5b506100b161008f366004610362565b600060208190529081526040902080546001909101546001600160a01b031682565b604080519283526001600160a01b039091166020830152015b60405180910390f35b3480156100df57600080fd5b506100f36100ee366004610362565b6101f9565b005b6100f36101033660046103c4565b505050565b34801561011457600080fd5b506100f3610123366004610362565b604080518082018252428152600060208083018281529482526001808252848320338452909152929020905181559151910155565b34801561016457600080fd5b50610194610173366004610428565b60016020818152600093845260408085209091529183529120805491015482565b604080519283526020830191909152016100ca565b3480156101b557600080fd5b506101c96101c4366004610428565b6102c2565b60405190151581526020016100ca565b3480156101e557600080fd5b506100f36101f4366004610458565b6102ee565b6000818152600160209081526040808320338452909152902080546102585760405162461bcd60e51b815260206004820152601160248201527027379030b1ba34bb329039b2b9b9b4b7b760791b604482015260640160405180910390fd5b805460009061026790426104ca565b6000848152602081905260408120549192509061028490836104dd565b90508083600101600082825461029a91906104f4565b9091555050506000928352505060016020818152604080842033855290915282208281550155565b60008281526001602090815260408083206001600160a01b038516845290915290205415155b92915050565b6000806102fd83850185610428565b915091506040518060400160405280603c846103199190610507565b81526001600160a01b039283166020918201526000978852878152604090972081518155960151600190960180546001600160a01b031916969091169590951790945550505050565b60006020828403121561037457600080fd5b5035919050565b60008083601f84011261038d57600080fd5b50813567ffffffffffffffff8111156103a557600080fd5b6020830191508360208285010111156103bd57600080fd5b9250929050565b6000806000604084860312156103d957600080fd5b83359250602084013567ffffffffffffffff8111156103f757600080fd5b6104038682870161037b565b9497909650939450505050565b6001600160a01b038116811461042557600080fd5b50565b6000806040838503121561043b57600080fd5b82359150602083013561044d81610410565b809150509250929050565b6000806000806060858703121561046e57600080fd5b84359350602085013561048081610410565b9250604085013567ffffffffffffffff81111561049c57600080fd5b6104a88782880161037b565b95989497509550505050565b634e487b7160e01b600052601160045260246000fd5b818103818111156102e8576102e86104b4565b80820281158282048414176102e8576102e86104b4565b808201808211156102e8576102e86104b4565b60008261052457634e487b7160e01b600052601260045260246000fd5b50049056fea26469706673582212202373cd45307848e776ce88bc077170c7102513101584aa15b7b4c4ce228bcc7364736f6c63430008140033";

type SessionModuleConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: SessionModuleConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class SessionModule__factory extends ContractFactory {
  constructor(...args: SessionModuleConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      SessionModule & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): SessionModule__factory {
    return super.connect(runner) as SessionModule__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): SessionModuleInterface {
    return new Interface(_abi) as SessionModuleInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): SessionModule {
    return new Contract(address, _abi, runner) as unknown as SessionModule;
  }
}
