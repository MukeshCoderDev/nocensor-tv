/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../common";
import type {
  ContentStorage,
  ContentStorageInterface,
} from "../ContentStorage";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "videoId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "string",
        name: "arweaveTxId",
        type: "string",
      },
    ],
    name: "ContentIdStored",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_videoId",
        type: "uint256",
      },
    ],
    name: "getContentId",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_videoId",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "_arweaveTxId",
        type: "string",
      },
    ],
    name: "storeContentId",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "videoArweaveTxIds",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b5061001a3361001f565b61006f565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6106f78061007e6000396000f3fe608060405234801561001057600080fd5b50600436106100625760003560e01c80636f7e7a6114610067578063715018a61461007c5780638da5cb5b14610084578063bd1ba496146100a4578063c29bb37d146100c4578063f2fde38b146100d7575b600080fd5b61007a610075366004610426565b6100ea565b005b61007a61019d565b6000546040516001600160a01b0390911681526020015b60405180910390f35b6100b76100b23660046104e1565b6101b1565b60405161009b91906104fa565b6100b76100d23660046104e1565b610253565b61007a6100e5366004610548565b6102ed565b6100f2610366565b60008151116101485760405162461bcd60e51b815260206004820152601c60248201527f4172776561766520547849442063616e6e6f7420626520656d7074790000000060448201526064015b60405180910390fd5b60008281526001602052604090206101608282610601565b50817f932937a1fd971655e475b8b4b12ea590329fdcd7da1bb4647b74333bc37a29028260405161019191906104fa565b60405180910390a25050565b6101a5610366565b6101af60006103c0565b565b60008181526001602052604090208054606091906101ce90610578565b80601f01602080910402602001604051908101604052809291908181526020018280546101fa90610578565b80156102475780601f1061021c57610100808354040283529160200191610247565b820191906000526020600020905b81548152906001019060200180831161022a57829003601f168201915b50505050509050919050565b6001602052600090815260409020805461026c90610578565b80601f016020809104026020016040519081016040528092919081815260200182805461029890610578565b80156102e55780601f106102ba576101008083540402835291602001916102e5565b820191906000526020600020905b8154815290600101906020018083116102c857829003601f168201915b505050505081565b6102f5610366565b6001600160a01b03811661035a5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b606482015260840161013f565b610363816103c0565b50565b6000546001600160a01b031633146101af5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161013f565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b634e487b7160e01b600052604160045260246000fd5b6000806040838503121561043957600080fd5b82359150602083013567ffffffffffffffff8082111561045857600080fd5b818501915085601f83011261046c57600080fd5b81358181111561047e5761047e610410565b604051601f8201601f19908116603f011681019083821181831017156104a6576104a6610410565b816040528281528860208487010111156104bf57600080fd5b8260208601602083013760006020848301015280955050505050509250929050565b6000602082840312156104f357600080fd5b5035919050565b600060208083528351808285015260005b818110156105275785810183015185820160400152820161050b565b506000604082860101526040601f19601f8301168501019250505092915050565b60006020828403121561055a57600080fd5b81356001600160a01b038116811461057157600080fd5b9392505050565b600181811c9082168061058c57607f821691505b6020821081036105ac57634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156105fc57600081815260208120601f850160051c810160208610156105d95750805b601f850160051c820191505b818110156105f8578281556001016105e5565b5050505b505050565b815167ffffffffffffffff81111561061b5761061b610410565b61062f816106298454610578565b846105b2565b602080601f831160018114610664576000841561064c5750858301515b600019600386901b1c1916600185901b1785556105f8565b600085815260208120601f198616915b8281101561069357888601518255948401946001909101908401610674565b50858210156106b15787850151600019600388901b60f8161c191681555b5050505050600190811b0190555056fea26469706673582212200e869415a4cb4b0dae3ede34ee2b51b1d973ebd0de96cd4067029aee59ad25af64736f6c63430008140033";

type ContentStorageConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ContentStorageConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ContentStorage__factory extends ContractFactory {
  constructor(...args: ContentStorageConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      ContentStorage & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): ContentStorage__factory {
    return super.connect(runner) as ContentStorage__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ContentStorageInterface {
    return new Interface(_abi) as ContentStorageInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): ContentStorage {
    return new Contract(address, _abi, runner) as unknown as ContentStorage;
  }
}
