/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../common";
import type { CurationPools, CurationPoolsInterface } from "../CurationPools";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_passionToken",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "contentId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "staker",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Staked",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "contentId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "staker",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Unstaked",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "contentId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "calculateRewards",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "passionToken",
    outputs: [
      {
        internalType: "contract PassionToken",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "contentId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "stake",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "stakes",
    outputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "totalStaked",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "contentId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "unstake",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060405162001216380380620012168339818101604052810190620000379190620001dc565b620000576200004b620000a660201b60201c565b620000ae60201b60201c565b6001808190555080600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550506200020e565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620001a48262000177565b9050919050565b620001b68162000197565b8114620001c257600080fd5b50565b600081519050620001d681620001ab565b92915050565b600060208284031215620001f557620001f462000172565b5b60006200020584828501620001c5565b91505092915050565b610ff8806200021e6000396000f3fe608060405234801561001057600080fd5b50600436106100935760003560e01c80637b0472f0116100665780637b0472f0146101205780638da5cb5b1461013c5780639e2c8a5b1461015a578063a9a3bba414610176578063f2fde38b146101a757610093565b80631768642214610098578063222f650f146100c857806341cb8c20146100e6578063715018a614610116575b600080fd5b6100b260048036038101906100ad91906109d5565b6101c3565b6040516100bf9190610a24565b60405180910390f35b6100d0610273565b6040516100dd9190610a9e565b60405180910390f35b61010060048036038101906100fb9190610ab9565b610299565b60405161010d9190610a24565b60405180910390f35b61011e6102b1565b005b61013a60048036038101906101359190610ae6565b6102c5565b005b6101446104a3565b6040516101519190610b35565b60405180910390f35b610174600480360381019061016f9190610ae6565b6104cc565b005b610190600480360381019061018b91906109d5565b6106e6565b60405161019e929190610b50565b60405180910390f35b6101c160048036038101906101bc9190610b79565b610717565b005b6000806003600085815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060405180604001604052908160008201548152602001600182015481525050905060008160200151426102499190610bd5565b90506201518081836000015161025f9190610c09565b6102699190610c7a565b9250505092915050565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60046020528060005260406000206000915090505481565b6102b961079a565b6102c36000610818565b565b6102cd6108dc565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3330846040518463ffffffff1660e01b815260040161032c93929190610cab565b6020604051808303816000875af115801561034b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061036f9190610d1a565b50806003600084815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160008282546103d39190610d47565b92505081905550426003600084815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010181905550806004600084815260200190815260200160002060008282546104559190610d47565b925050819055507f18dcd430020e4d4899772fd94a8b40451dc5044dfb70bc46b532eeae431c864f82338360405161048f93929190610d7b565b60405180910390a161049f61092b565b5050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6104d46108dc565b806003600084815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000154101561056a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161056190610e0f565b60405180910390fd5b806003600084815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160008282546105cd9190610bd5565b92505081905550806004600084815260200190815260200160002060008282546105f79190610bd5565b92505081905550600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33836040518363ffffffff1660e01b815260040161065b929190610e2f565b6020604051808303816000875af115801561067a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061069e9190610d1a565b507f37375b03d8924bd8f076f11f8411b9962aa5c02fb489021507bc6bb6f850e3658233836040516106d293929190610d7b565b60405180910390a16106e261092b565b5050565b6003602052816000526040600020602052806000526040600020600091509150508060000154908060010154905082565b61071f61079a565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff160361078e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161078590610eca565b60405180910390fd5b61079781610818565b50565b6107a2610934565b73ffffffffffffffffffffffffffffffffffffffff166107c06104a3565b73ffffffffffffffffffffffffffffffffffffffff1614610816576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161080d90610f36565b60405180910390fd5b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600260015403610921576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161091890610fa2565b60405180910390fd5b6002600181905550565b60018081905550565b600033905090565b600080fd5b6000819050919050565b61095481610941565b811461095f57600080fd5b50565b6000813590506109718161094b565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006109a282610977565b9050919050565b6109b281610997565b81146109bd57600080fd5b50565b6000813590506109cf816109a9565b92915050565b600080604083850312156109ec576109eb61093c565b5b60006109fa85828601610962565b9250506020610a0b858286016109c0565b9150509250929050565b610a1e81610941565b82525050565b6000602082019050610a396000830184610a15565b92915050565b6000819050919050565b6000610a64610a5f610a5a84610977565b610a3f565b610977565b9050919050565b6000610a7682610a49565b9050919050565b6000610a8882610a6b565b9050919050565b610a9881610a7d565b82525050565b6000602082019050610ab36000830184610a8f565b92915050565b600060208284031215610acf57610ace61093c565b5b6000610add84828501610962565b91505092915050565b60008060408385031215610afd57610afc61093c565b5b6000610b0b85828601610962565b9250506020610b1c85828601610962565b9150509250929050565b610b2f81610997565b82525050565b6000602082019050610b4a6000830184610b26565b92915050565b6000604082019050610b656000830185610a15565b610b726020830184610a15565b9392505050565b600060208284031215610b8f57610b8e61093c565b5b6000610b9d848285016109c0565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610be082610941565b9150610beb83610941565b9250828203905081811115610c0357610c02610ba6565b5b92915050565b6000610c1482610941565b9150610c1f83610941565b9250828202610c2d81610941565b91508282048414831517610c4457610c43610ba6565b5b5092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610c8582610941565b9150610c9083610941565b925082610ca057610c9f610c4b565b5b828204905092915050565b6000606082019050610cc06000830186610b26565b610ccd6020830185610b26565b610cda6040830184610a15565b949350505050565b60008115159050919050565b610cf781610ce2565b8114610d0257600080fd5b50565b600081519050610d1481610cee565b92915050565b600060208284031215610d3057610d2f61093c565b5b6000610d3e84828501610d05565b91505092915050565b6000610d5282610941565b9150610d5d83610941565b9250828201905080821115610d7557610d74610ba6565b5b92915050565b6000606082019050610d906000830186610a15565b610d9d6020830185610b26565b610daa6040830184610a15565b949350505050565b600082825260208201905092915050565b7f496e73756666696369656e74207374616b650000000000000000000000000000600082015250565b6000610df9601283610db2565b9150610e0482610dc3565b602082019050919050565b60006020820190508181036000830152610e2881610dec565b9050919050565b6000604082019050610e446000830185610b26565b610e516020830184610a15565b9392505050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b6000610eb4602683610db2565b9150610ebf82610e58565b604082019050919050565b60006020820190508181036000830152610ee381610ea7565b9050919050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b6000610f20602083610db2565b9150610f2b82610eea565b602082019050919050565b60006020820190508181036000830152610f4f81610f13565b9050919050565b7f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00600082015250565b6000610f8c601f83610db2565b9150610f9782610f56565b602082019050919050565b60006020820190508181036000830152610fbb81610f7f565b905091905056fea2646970667358221220394384b294a091f4219ba75daab9dc58280a54209f40f1bd0449d90d33a1936264736f6c63430008140033";

type CurationPoolsConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: CurationPoolsConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class CurationPools__factory extends ContractFactory {
  constructor(...args: CurationPoolsConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    _passionToken: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(_passionToken, overrides || {});
  }
  override deploy(
    _passionToken: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(_passionToken, overrides || {}) as Promise<
      CurationPools & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): CurationPools__factory {
    return super.connect(runner) as CurationPools__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): CurationPoolsInterface {
    return new Interface(_abi) as CurationPoolsInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): CurationPools {
    return new Contract(address, _abi, runner) as unknown as CurationPools;
  }
}
