/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../common";
import type { CurationPools, CurationPoolsInterface } from "../CurationPools";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_passionToken",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "contentId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "staker",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Staked",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "contentId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "staker",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Unstaked",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "contentId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "calculateRewards",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "passionToken",
    outputs: [
      {
        internalType: "contract PassionToken",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "contentId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "stake",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "stakes",
    outputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "totalStaked",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "contentId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "unstake",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b506040516108b43803806108b483398101604081905261002f916100b1565b61003833610061565b60018055600280546001600160a01b0319166001600160a01b03929092169190911790556100e1565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6000602082840312156100c357600080fd5b81516001600160a01b03811681146100da57600080fd5b9392505050565b6107c4806100f06000396000f3fe608060405234801561001057600080fd5b50600436106100935760003560e01c80637b0472f0116100665780637b0472f0146101135780638da5cb5b146101265780639e2c8a5b14610137578063a9a3bba41461014a578063f2fde38b1461019157600080fd5b80631768642214610098578063222f650f146100be57806341cb8c20146100e9578063715018a614610109575b600080fd5b6100ab6100a636600461066e565b6101a4565b6040519081526020015b60405180910390f35b6002546100d1906001600160a01b031681565b6040516001600160a01b0390911681526020016100b5565b6100ab6100f736600461069a565b60046020526000908152604090205481565b610111610214565b005b6101116101213660046106b3565b610228565b6000546001600160a01b03166100d1565b6101116101453660046106b3565b610367565b61017c61015836600461066e565b60036020908152600092835260408084209091529082529020805460019091015482565b604080519283526020830191909152016100b5565b61011161019f3660046106d5565b6104d6565b60008281526003602090815260408083206001600160a01b03851684528252808320815180830190925280548252600101549181018290529082906101e9904261070d565b9050620151808183600001516101ff9190610720565b6102099190610737565b925050505b92915050565b61021c61054f565b61022660006105a9565b565b6102306105f9565b6002546040516323b872dd60e01b8152336004820152306024820152604481018390526001600160a01b03909116906323b872dd906064016020604051808303816000875af1158015610287573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102ab9190610759565b506000828152600360209081526040808320338452909152812080548392906102d590849061077b565b9091555050600082815260036020908152604080832033845282528083204260019091015584835260049091528120805483929061031490849061077b565b9091555050604080518381523360208201529081018290527f18dcd430020e4d4899772fd94a8b40451dc5044dfb70bc46b532eeae431c864f906060015b60405180910390a161036360018055565b5050565b61036f6105f9565b60008281526003602090815260408083203384529091529020548111156103d25760405162461bcd60e51b8152602060048201526012602482015271496e73756666696369656e74207374616b6560701b60448201526064015b60405180910390fd5b6000828152600360209081526040808320338452909152812080548392906103fb90849061070d565b90915550506000828152600460205260408120805483929061041e90849061070d565b909155505060025460405163a9059cbb60e01b8152336004820152602481018390526001600160a01b039091169063a9059cbb906044016020604051808303816000875af1158015610474573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104989190610759565b50604080518381523360208201529081018290527f37375b03d8924bd8f076f11f8411b9962aa5c02fb489021507bc6bb6f850e36590606001610352565b6104de61054f565b6001600160a01b0381166105435760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016103c9565b61054c816105a9565b50565b6000546001600160a01b031633146102265760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016103c9565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60026001540361064b5760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c0060448201526064016103c9565b6002600155565b80356001600160a01b038116811461066957600080fd5b919050565b6000806040838503121561068157600080fd5b8235915061069160208401610652565b90509250929050565b6000602082840312156106ac57600080fd5b5035919050565b600080604083850312156106c657600080fd5b50508035926020909101359150565b6000602082840312156106e757600080fd5b6106f082610652565b9392505050565b634e487b7160e01b600052601160045260246000fd5b8181038181111561020e5761020e6106f7565b808202811582820484141761020e5761020e6106f7565b60008261075457634e487b7160e01b600052601260045260246000fd5b500490565b60006020828403121561076b57600080fd5b815180151581146106f057600080fd5b8082018082111561020e5761020e6106f756fea2646970667358221220d0b3e8ff39cc20a950d8e729bf3c3290dea29ce6c1740a8591d8a2405faf9eea64736f6c63430008140033";

type CurationPoolsConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: CurationPoolsConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class CurationPools__factory extends ContractFactory {
  constructor(...args: CurationPoolsConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    _passionToken: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(_passionToken, overrides || {});
  }
  override deploy(
    _passionToken: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(_passionToken, overrides || {}) as Promise<
      CurationPools & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): CurationPools__factory {
    return super.connect(runner) as CurationPools__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): CurationPoolsInterface {
    return new Interface(_abi) as CurationPoolsInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): CurationPools {
    return new Contract(address, _abi, runner) as unknown as CurationPools;
  }
}
