/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../common";
import type { ModuleManager, ModuleManagerInterface } from "../ModuleManager";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_contentRegistry",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "contentId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "module",
        type: "address",
      },
    ],
    name: "ModuleAttached",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "module",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "status",
        type: "bool",
      },
    ],
    name: "ModuleWhitelisted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "contentId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "module",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "initData",
        type: "bytes",
      },
    ],
    name: "attachModule",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "contentModules",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "contentRegistry",
    outputs: [
      {
        internalType: "contract ContentRegistry",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "contentId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "execute",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "module",
        type: "address",
      },
      {
        internalType: "bool",
        name: "status",
        type: "bool",
      },
    ],
    name: "whitelistModule",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "whitelistedModules",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040523480156200001157600080fd5b506040516200118a3803806200118a8339818101604052810190620000379190620001dc565b620000576200004b620000a660201b60201c565b620000ae60201b60201c565b6001808190555080600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550506200020e565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620001a48262000177565b9050919050565b620001b68162000197565b8114620001c257600080fd5b50565b600081519050620001d681620001ab565b92915050565b600060208284031215620001f557620001f462000172565b5b60006200020584828501620001c5565b91505092915050565b610f6c806200021e6000396000f3fe6080604052600436106100865760003560e01c8063867574801161005957806386757480146101265780638da5cb5b1461014f578063a3756ebb1461017a578063c3f8450b146101b7578063f2fde38b146101e057610086565b806327a4f2bb1461008b57806359efcb15146100b6578063715018a6146100d25780637e1087b6146100e9575b600080fd5b34801561009757600080fd5b506100a0610209565b6040516100ad91906108ba565b60405180910390f35b6100d060048036038101906100cb919061097a565b61022f565b005b3480156100de57600080fd5b506100e761035c565b005b3480156100f557600080fd5b50610110600480360381019061010b91906109da565b610370565b60405161011d9190610a28565b60405180910390f35b34801561013257600080fd5b5061014d60048036038101906101489190610a6f565b6103a3565b005b34801561015b57600080fd5b50610164610531565b6040516101719190610a28565b60405180910390f35b34801561018657600080fd5b506101a1600480360381019061019c9190610ae3565b61055a565b6040516101ae9190610b2b565b60405180910390f35b3480156101c357600080fd5b506101de60048036038101906101d99190610b72565b61057a565b005b3480156101ec57600080fd5b5061020760048036038101906102029190610ae3565b610616565b005b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b610237610699565b60006003600085815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036102de576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102d590610c0f565b60405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff166359efcb15348686866040518563ffffffff1660e01b815260040161031c93929190610c9c565b6000604051808303818588803b15801561033557600080fd5b505af1158015610349573d6000803e3d6000fd5b5050505050506103576106e8565b505050565b6103646106f1565b61036e600061076f565b565b60036020528060005260406000206000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1661042f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161042690610d1a565b60405180910390fd5b826003600086815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508273ffffffffffffffffffffffffffffffffffffffff1663e209b646853385856040518563ffffffff1660e01b81526004016104c09493929190610d3a565b600060405180830381600087803b1580156104da57600080fd5b505af11580156104ee573d6000803e3d6000fd5b505050507f6319329853d0fd85dcc9750bfe970e6fa839d85f17ee3cf73aea0131f7adab088484604051610523929190610d7a565b60405180910390a150505050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60046020528060005260406000206000915054906101000a900460ff1681565b6105826106f1565b80600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055507f90b76f3b0d31020a89ff64d2bc7bc18f912018d5d51334eb496b6c8ae329cb16828260405161060a929190610da3565b60405180910390a15050565b61061e6106f1565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff160361068d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161068490610e3e565b60405180910390fd5b6106968161076f565b50565b6002600154036106de576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106d590610eaa565b60405180910390fd5b6002600181905550565b60018081905550565b6106f9610833565b73ffffffffffffffffffffffffffffffffffffffff16610717610531565b73ffffffffffffffffffffffffffffffffffffffff161461076d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161076490610f16565b60405180910390fd5b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600061088061087b6108768461083b565b61085b565b61083b565b9050919050565b600061089282610865565b9050919050565b60006108a482610887565b9050919050565b6108b481610899565b82525050565b60006020820190506108cf60008301846108ab565b92915050565b600080fd5b600080fd5b6000819050919050565b6108f2816108df565b81146108fd57600080fd5b50565b60008135905061090f816108e9565b92915050565b600080fd5b600080fd5b600080fd5b60008083601f84011261093a57610939610915565b5b8235905067ffffffffffffffff8111156109575761095661091a565b5b6020830191508360018202830111156109735761097261091f565b5b9250929050565b600080600060408486031215610993576109926108d5565b5b60006109a186828701610900565b935050602084013567ffffffffffffffff8111156109c2576109c16108da565b5b6109ce86828701610924565b92509250509250925092565b6000602082840312156109f0576109ef6108d5565b5b60006109fe84828501610900565b91505092915050565b6000610a128261083b565b9050919050565b610a2281610a07565b82525050565b6000602082019050610a3d6000830184610a19565b92915050565b610a4c81610a07565b8114610a5757600080fd5b50565b600081359050610a6981610a43565b92915050565b60008060008060608587031215610a8957610a886108d5565b5b6000610a9787828801610900565b9450506020610aa887828801610a5a565b935050604085013567ffffffffffffffff811115610ac957610ac86108da565b5b610ad587828801610924565b925092505092959194509250565b600060208284031215610af957610af86108d5565b5b6000610b0784828501610a5a565b91505092915050565b60008115159050919050565b610b2581610b10565b82525050565b6000602082019050610b406000830184610b1c565b92915050565b610b4f81610b10565b8114610b5a57600080fd5b50565b600081359050610b6c81610b46565b92915050565b60008060408385031215610b8957610b886108d5565b5b6000610b9785828601610a5a565b9250506020610ba885828601610b5d565b9150509250929050565b600082825260208201905092915050565b7f4e6f206d6f64756c652061747461636865640000000000000000000000000000600082015250565b6000610bf9601283610bb2565b9150610c0482610bc3565b602082019050919050565b60006020820190508181036000830152610c2881610bec565b9050919050565b610c38816108df565b82525050565b600082825260208201905092915050565b82818337600083830152505050565b6000601f19601f8301169050919050565b6000610c7b8385610c3e565b9350610c88838584610c4f565b610c9183610c5e565b840190509392505050565b6000604082019050610cb16000830186610c2f565b8181036020830152610cc4818486610c6f565b9050949350505050565b7f4d6f64756c65206e6f742077686974656c697374656400000000000000000000600082015250565b6000610d04601683610bb2565b9150610d0f82610cce565b602082019050919050565b60006020820190508181036000830152610d3381610cf7565b9050919050565b6000606082019050610d4f6000830187610c2f565b610d5c6020830186610a19565b8181036040830152610d6f818486610c6f565b905095945050505050565b6000604082019050610d8f6000830185610c2f565b610d9c6020830184610a19565b9392505050565b6000604082019050610db86000830185610a19565b610dc56020830184610b1c565b9392505050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b6000610e28602683610bb2565b9150610e3382610dcc565b604082019050919050565b60006020820190508181036000830152610e5781610e1b565b9050919050565b7f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00600082015250565b6000610e94601f83610bb2565b9150610e9f82610e5e565b602082019050919050565b60006020820190508181036000830152610ec381610e87565b9050919050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b6000610f00602083610bb2565b9150610f0b82610eca565b602082019050919050565b60006020820190508181036000830152610f2f81610ef3565b905091905056fea2646970667358221220c286ff77742171325cc9d9a6c9338e0154337139da8095bae626e4c7e8474b8364736f6c63430008140033";

type ModuleManagerConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ModuleManagerConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ModuleManager__factory extends ContractFactory {
  constructor(...args: ModuleManagerConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    _contentRegistry: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(_contentRegistry, overrides || {});
  }
  override deploy(
    _contentRegistry: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(_contentRegistry, overrides || {}) as Promise<
      ModuleManager & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): ModuleManager__factory {
    return super.connect(runner) as ModuleManager__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ModuleManagerInterface {
    return new Interface(_abi) as ModuleManagerInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): ModuleManager {
    return new Contract(address, _abi, runner) as unknown as ModuleManager;
  }
}
